<?php
/**
 * CodeSigningHardwarePlatform
 *
 * PHP version 5
 *
 * @category Class
 * @package  Domainrobot
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Domainrobot JSON API
 *
 * Domainrobot JSON API for managing: Domains, SSL            Certificates, DNS and            much more.
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.16-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Domainrobot\Model;
use \Domainrobot\ObjectSerializer;

/**
 * CodeSigningHardwarePlatform Class Doc Comment
 *
 * @category Class
 * @package  Domainrobot
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class CodeSigningHardwarePlatform
{
    /**
     * Possible values of this enum
     */
    const AEP_KEYPER = 'AEP_KEYPER';
    const ARX_PRIVATE_SERVER = 'ARX_PRIVATE_SERVER';
    const BULL_TRUSTWAY_CRYPTO_PCI = 'BULL_TRUSTWAY_CRYPTO_PCI';
    const E_PASS_3003 = 'E_PASS_3003';
    const SAFE_NET_E_TOKEN_5100 = 'SAFE_NET_E_TOKEN_5100';
    const SAFE_NET_E_TOKEN_5105 = 'SAFE_NET_E_TOKEN_5105';
    const SAFE_NET_E_TOKEN_5110 = 'SAFE_NET_E_TOKEN_5110';
    const SAFE_NET_E_TOKEN_5110_FIPS = 'SAFE_NET_E_TOKEN_5110_FIPS';
    const SAFE_NET_E_TOKEN_5200 = 'SAFE_NET_E_TOKEN_5200';
    const SAFE_NET_E_TOKEN_5205 = 'SAFE_NET_E_TOKEN_5205';
    const SAFE_NET_E_TOKEN_PRO_72_K = 'SAFE_NET_E_TOKEN_PRO_72K';
    const SAFE_NET_E_TOKEN_PRO_ANYWHERE = 'SAFE_NET_E_TOKEN_PRO_ANYWHERE';
    const SAFE_NET_I_KEY_4000 = 'SAFE_NET_I_KEY_4000';
    const SAFE_NET_LUNA = 'SAFE_NET_LUNA';
    const THALES_N_SHIELD = 'THALES_N_SHIELD';
    const ULTIMACO_CRYPTO_SERVER = 'ULTIMACO_CRYPTO_SERVER';
    const OTHER = 'OTHER';
    
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::AEP_KEYPER,
            self::ARX_PRIVATE_SERVER,
            self::BULL_TRUSTWAY_CRYPTO_PCI,
            self::E_PASS_3003,
            self::SAFE_NET_E_TOKEN_5100,
            self::SAFE_NET_E_TOKEN_5105,
            self::SAFE_NET_E_TOKEN_5110,
            self::SAFE_NET_E_TOKEN_5110_FIPS,
            self::SAFE_NET_E_TOKEN_5200,
            self::SAFE_NET_E_TOKEN_5205,
            self::SAFE_NET_E_TOKEN_PRO_72_K,
            self::SAFE_NET_E_TOKEN_PRO_ANYWHERE,
            self::SAFE_NET_I_KEY_4000,
            self::SAFE_NET_LUNA,
            self::THALES_N_SHIELD,
            self::ULTIMACO_CRYPTO_SERVER,
            self::OTHER,
        ];
    }
}


