<?php
/**
 * Majestic
 *
 * PHP version 5
 *
 * @category Class
 * @package  Domainrobot
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Service Pricer API
 *
 * The documentation for the internal price estimation API.<br> Every request expects the following headers:<ul><li>Content-Type: application/json</li><li>Accept: application/json</li></ul>
 *
 * OpenAPI spec version: 1.2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.16-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Domainrobot\Model;

use \ArrayAccess;
use \Domainrobot\ObjectSerializer;

/**
 * Majestic Class Doc Comment
 *
 * @category Class
 * @package  Domainrobot
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class Majestic implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Majestic';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'itemNu' => 'string',
        'item' => 'string',
        'resultCode' => 'string',
        'status' => 'string',
        'extBackLinks' => 'string',
        'refDomains' => 'string',
        'analysisResUnitsCost' => 'string',
        'aCRank' => 'string',
        'itemType' => 'string',
        'indexedURLs' => 'string',
        'getTopBackLinksAnalysisResUnitsCost' => 'string',
        'downloadBacklinksAnalysisResUnitsCost' => 'string',
        'downloadRefDomainBacklinksAnalysisResUnitsCost' => 'string',
        'refIPs' => 'string',
        'refSubNets' => 'string',
        'refDomainsEDU' => 'string',
        'extBackLinksEDU' => 'string',
        'refDomainsGOV' => 'string',
        'extBackLinksGOV' => 'string',
        'refDomainsEDUExact' => 'string',
        'extBackLinksEDUExact' => 'string',
        'refDomainsGOVExact' => 'string',
        'extBackLinksGOVExact' => 'string',
        'crawledFlag' => 'string',
        'lastCrawlDate' => 'string',
        'lastCrawlResult' => 'string',
        'redirectFlag' => 'string',
        'finalRedirectResult' => 'string',
        'outDomainsExternal' => 'string',
        'outLinksExternal' => 'string',
        'outLinksInternal' => 'string',
        'outLinksPages' => 'string',
        'lastSeen' => 'string',
        'title' => 'string',
        'redirectTo' => 'string',
        'language' => 'string',
        'languageDesc' => 'string',
        'languageConfidence' => 'string',
        'languagePageRatios' => 'string',
        'languageTotalPages' => 'string',
        'refLanguage' => 'string',
        'refLanguageDesc' => 'string',
        'refLanguageConfidence' => 'string',
        'refLanguagePageRatios' => 'string',
        'refLanguageTotalPages' => 'string',
        'crawledURLs' => 'string',
        'rootDomainIPAddress' => 'string',
        'totalNonUniqueLinks' => 'string',
        'nonUniqueLinkTypeHomepages' => 'string',
        'nonUniqueLinkTypeIndirect' => 'string',
        'nonUniqueLinkTypeDeleted' => 'string',
        'nonUniqueLinkTypeNoFollow' => 'string',
        'nonUniqueLinkTypeProtocolHTTPS' => 'string',
        'nonUniqueLinkTypeFrame' => 'string',
        'nonUniqueLinkTypeImageLink' => 'string',
        'nonUniqueLinkTypeRedirect' => 'string',
        'nonUniqueLinkTypeTextLink' => 'string',
        'refDomainTypeLive' => 'string',
        'refDomainTypeFollow' => 'string',
        'refDomainTypeHomepageLink' => 'string',
        'refDomainTypeDirect' => 'string',
        'refDomainTypeProtocolHTTPS' => 'string',
        'canonicalURL' => 'string',
        'citationFlow' => 'string',
        'trustFlow' => 'string',
        'trustMetric' => 'string',
        'topicalTrustFlowTopic0' => 'string',
        'topicalTrustFlowValue0' => 'string',
        'topicalTrustFlowTopic1' => 'string',
        'topicalTrustFlowValue1' => 'string',
        'topicalTrustFlowTopic2' => 'string',
        'topicalTrustFlowValue2' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'itemNu' => null,
        'item' => null,
        'resultCode' => null,
        'status' => null,
        'extBackLinks' => null,
        'refDomains' => null,
        'analysisResUnitsCost' => null,
        'aCRank' => null,
        'itemType' => null,
        'indexedURLs' => null,
        'getTopBackLinksAnalysisResUnitsCost' => null,
        'downloadBacklinksAnalysisResUnitsCost' => null,
        'downloadRefDomainBacklinksAnalysisResUnitsCost' => null,
        'refIPs' => null,
        'refSubNets' => null,
        'refDomainsEDU' => null,
        'extBackLinksEDU' => null,
        'refDomainsGOV' => null,
        'extBackLinksGOV' => null,
        'refDomainsEDUExact' => null,
        'extBackLinksEDUExact' => null,
        'refDomainsGOVExact' => null,
        'extBackLinksGOVExact' => null,
        'crawledFlag' => null,
        'lastCrawlDate' => null,
        'lastCrawlResult' => null,
        'redirectFlag' => null,
        'finalRedirectResult' => null,
        'outDomainsExternal' => null,
        'outLinksExternal' => null,
        'outLinksInternal' => null,
        'outLinksPages' => null,
        'lastSeen' => null,
        'title' => null,
        'redirectTo' => null,
        'language' => null,
        'languageDesc' => null,
        'languageConfidence' => null,
        'languagePageRatios' => null,
        'languageTotalPages' => null,
        'refLanguage' => null,
        'refLanguageDesc' => null,
        'refLanguageConfidence' => null,
        'refLanguagePageRatios' => null,
        'refLanguageTotalPages' => null,
        'crawledURLs' => null,
        'rootDomainIPAddress' => null,
        'totalNonUniqueLinks' => null,
        'nonUniqueLinkTypeHomepages' => null,
        'nonUniqueLinkTypeIndirect' => null,
        'nonUniqueLinkTypeDeleted' => null,
        'nonUniqueLinkTypeNoFollow' => null,
        'nonUniqueLinkTypeProtocolHTTPS' => null,
        'nonUniqueLinkTypeFrame' => null,
        'nonUniqueLinkTypeImageLink' => null,
        'nonUniqueLinkTypeRedirect' => null,
        'nonUniqueLinkTypeTextLink' => null,
        'refDomainTypeLive' => null,
        'refDomainTypeFollow' => null,
        'refDomainTypeHomepageLink' => null,
        'refDomainTypeDirect' => null,
        'refDomainTypeProtocolHTTPS' => null,
        'canonicalURL' => null,
        'citationFlow' => null,
        'trustFlow' => null,
        'trustMetric' => null,
        'topicalTrustFlowTopic0' => null,
        'topicalTrustFlowValue0' => null,
        'topicalTrustFlowTopic1' => null,
        'topicalTrustFlowValue1' => null,
        'topicalTrustFlowTopic2' => null,
        'topicalTrustFlowValue2' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'itemNu' => 'ItemNu',
        'item' => 'Item',
        'resultCode' => 'ResultCode',
        'status' => 'Status',
        'extBackLinks' => 'ExtBackLinks',
        'refDomains' => 'RefDomains',
        'analysisResUnitsCost' => 'AnalysisResUnitsCost',
        'aCRank' => 'ACRank',
        'itemType' => 'ItemType',
        'indexedURLs' => 'IndexedURLs',
        'getTopBackLinksAnalysisResUnitsCost' => 'GetTopBackLinksAnalysisResUnitsCost',
        'downloadBacklinksAnalysisResUnitsCost' => 'DownloadBacklinksAnalysisResUnitsCost',
        'downloadRefDomainBacklinksAnalysisResUnitsCost' => 'DownloadRefDomainBacklinksAnalysisResUnitsCost',
        'refIPs' => 'RefIPs',
        'refSubNets' => 'RefSubNets',
        'refDomainsEDU' => 'RefDomainsEDU',
        'extBackLinksEDU' => 'ExtBackLinksEDU',
        'refDomainsGOV' => 'RefDomainsGOV',
        'extBackLinksGOV' => 'ExtBackLinksGOV',
        'refDomainsEDUExact' => 'RefDomainsEDU_Exact',
        'extBackLinksEDUExact' => 'ExtBackLinksEDU_Exact',
        'refDomainsGOVExact' => 'RefDomainsGOV_Exact',
        'extBackLinksGOVExact' => 'ExtBackLinksGOV_Exact',
        'crawledFlag' => 'CrawledFlag',
        'lastCrawlDate' => 'LastCrawlDate',
        'lastCrawlResult' => 'LastCrawlResult',
        'redirectFlag' => 'RedirectFlag',
        'finalRedirectResult' => 'FinalRedirectResult',
        'outDomainsExternal' => 'OutDomainsExternal',
        'outLinksExternal' => 'OutLinksExternal',
        'outLinksInternal' => 'OutLinksInternal',
        'outLinksPages' => 'OutLinksPages',
        'lastSeen' => 'LastSeen',
        'title' => 'Title',
        'redirectTo' => 'RedirectTo',
        'language' => 'Language',
        'languageDesc' => 'LanguageDesc',
        'languageConfidence' => 'LanguageConfidence',
        'languagePageRatios' => 'LanguagePageRatios',
        'languageTotalPages' => 'LanguageTotalPages',
        'refLanguage' => 'RefLanguage',
        'refLanguageDesc' => 'RefLanguageDesc',
        'refLanguageConfidence' => 'RefLanguageConfidence',
        'refLanguagePageRatios' => 'RefLanguagePageRatios',
        'refLanguageTotalPages' => 'RefLanguageTotalPages',
        'crawledURLs' => 'CrawledURLs',
        'rootDomainIPAddress' => 'RootDomainIPAddress',
        'totalNonUniqueLinks' => 'TotalNonUniqueLinks',
        'nonUniqueLinkTypeHomepages' => 'NonUniqueLinkTypeHomepages',
        'nonUniqueLinkTypeIndirect' => 'NonUniqueLinkTypeIndirect',
        'nonUniqueLinkTypeDeleted' => 'NonUniqueLinkTypeDeleted',
        'nonUniqueLinkTypeNoFollow' => 'NonUniqueLinkTypeNoFollow',
        'nonUniqueLinkTypeProtocolHTTPS' => 'NonUniqueLinkTypeProtocolHTTPS',
        'nonUniqueLinkTypeFrame' => 'NonUniqueLinkTypeFrame',
        'nonUniqueLinkTypeImageLink' => 'NonUniqueLinkTypeImageLink',
        'nonUniqueLinkTypeRedirect' => 'NonUniqueLinkTypeRedirect',
        'nonUniqueLinkTypeTextLink' => 'NonUniqueLinkTypeTextLink',
        'refDomainTypeLive' => 'RefDomainTypeLive',
        'refDomainTypeFollow' => 'RefDomainTypeFollow',
        'refDomainTypeHomepageLink' => 'RefDomainTypeHomepageLink',
        'refDomainTypeDirect' => 'RefDomainTypeDirect',
        'refDomainTypeProtocolHTTPS' => 'RefDomainTypeProtocolHTTPS',
        'canonicalURL' => 'CanonicalURL',
        'citationFlow' => 'CitationFlow',
        'trustFlow' => 'TrustFlow',
        'trustMetric' => 'TrustMetric',
        'topicalTrustFlowTopic0' => 'TopicalTrustFlow_Topic_0',
        'topicalTrustFlowValue0' => 'TopicalTrustFlow_Value_0',
        'topicalTrustFlowTopic1' => 'TopicalTrustFlow_Topic_1',
        'topicalTrustFlowValue1' => 'TopicalTrustFlow_Value_1',
        'topicalTrustFlowTopic2' => 'TopicalTrustFlow_Topic_2',
        'topicalTrustFlowValue2' => 'TopicalTrustFlow_Value_2'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'itemNu' => 'setItemNu',
        'item' => 'setItem',
        'resultCode' => 'setResultCode',
        'status' => 'setStatus',
        'extBackLinks' => 'setExtBackLinks',
        'refDomains' => 'setRefDomains',
        'analysisResUnitsCost' => 'setAnalysisResUnitsCost',
        'aCRank' => 'setACRank',
        'itemType' => 'setItemType',
        'indexedURLs' => 'setIndexedURLs',
        'getTopBackLinksAnalysisResUnitsCost' => 'setGetTopBackLinksAnalysisResUnitsCost',
        'downloadBacklinksAnalysisResUnitsCost' => 'setDownloadBacklinksAnalysisResUnitsCost',
        'downloadRefDomainBacklinksAnalysisResUnitsCost' => 'setDownloadRefDomainBacklinksAnalysisResUnitsCost',
        'refIPs' => 'setRefIPs',
        'refSubNets' => 'setRefSubNets',
        'refDomainsEDU' => 'setRefDomainsEDU',
        'extBackLinksEDU' => 'setExtBackLinksEDU',
        'refDomainsGOV' => 'setRefDomainsGOV',
        'extBackLinksGOV' => 'setExtBackLinksGOV',
        'refDomainsEDUExact' => 'setRefDomainsEDUExact',
        'extBackLinksEDUExact' => 'setExtBackLinksEDUExact',
        'refDomainsGOVExact' => 'setRefDomainsGOVExact',
        'extBackLinksGOVExact' => 'setExtBackLinksGOVExact',
        'crawledFlag' => 'setCrawledFlag',
        'lastCrawlDate' => 'setLastCrawlDate',
        'lastCrawlResult' => 'setLastCrawlResult',
        'redirectFlag' => 'setRedirectFlag',
        'finalRedirectResult' => 'setFinalRedirectResult',
        'outDomainsExternal' => 'setOutDomainsExternal',
        'outLinksExternal' => 'setOutLinksExternal',
        'outLinksInternal' => 'setOutLinksInternal',
        'outLinksPages' => 'setOutLinksPages',
        'lastSeen' => 'setLastSeen',
        'title' => 'setTitle',
        'redirectTo' => 'setRedirectTo',
        'language' => 'setLanguage',
        'languageDesc' => 'setLanguageDesc',
        'languageConfidence' => 'setLanguageConfidence',
        'languagePageRatios' => 'setLanguagePageRatios',
        'languageTotalPages' => 'setLanguageTotalPages',
        'refLanguage' => 'setRefLanguage',
        'refLanguageDesc' => 'setRefLanguageDesc',
        'refLanguageConfidence' => 'setRefLanguageConfidence',
        'refLanguagePageRatios' => 'setRefLanguagePageRatios',
        'refLanguageTotalPages' => 'setRefLanguageTotalPages',
        'crawledURLs' => 'setCrawledURLs',
        'rootDomainIPAddress' => 'setRootDomainIPAddress',
        'totalNonUniqueLinks' => 'setTotalNonUniqueLinks',
        'nonUniqueLinkTypeHomepages' => 'setNonUniqueLinkTypeHomepages',
        'nonUniqueLinkTypeIndirect' => 'setNonUniqueLinkTypeIndirect',
        'nonUniqueLinkTypeDeleted' => 'setNonUniqueLinkTypeDeleted',
        'nonUniqueLinkTypeNoFollow' => 'setNonUniqueLinkTypeNoFollow',
        'nonUniqueLinkTypeProtocolHTTPS' => 'setNonUniqueLinkTypeProtocolHTTPS',
        'nonUniqueLinkTypeFrame' => 'setNonUniqueLinkTypeFrame',
        'nonUniqueLinkTypeImageLink' => 'setNonUniqueLinkTypeImageLink',
        'nonUniqueLinkTypeRedirect' => 'setNonUniqueLinkTypeRedirect',
        'nonUniqueLinkTypeTextLink' => 'setNonUniqueLinkTypeTextLink',
        'refDomainTypeLive' => 'setRefDomainTypeLive',
        'refDomainTypeFollow' => 'setRefDomainTypeFollow',
        'refDomainTypeHomepageLink' => 'setRefDomainTypeHomepageLink',
        'refDomainTypeDirect' => 'setRefDomainTypeDirect',
        'refDomainTypeProtocolHTTPS' => 'setRefDomainTypeProtocolHTTPS',
        'canonicalURL' => 'setCanonicalURL',
        'citationFlow' => 'setCitationFlow',
        'trustFlow' => 'setTrustFlow',
        'trustMetric' => 'setTrustMetric',
        'topicalTrustFlowTopic0' => 'setTopicalTrustFlowTopic0',
        'topicalTrustFlowValue0' => 'setTopicalTrustFlowValue0',
        'topicalTrustFlowTopic1' => 'setTopicalTrustFlowTopic1',
        'topicalTrustFlowValue1' => 'setTopicalTrustFlowValue1',
        'topicalTrustFlowTopic2' => 'setTopicalTrustFlowTopic2',
        'topicalTrustFlowValue2' => 'setTopicalTrustFlowValue2'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'itemNu' => 'getItemNu',
        'item' => 'getItem',
        'resultCode' => 'getResultCode',
        'status' => 'getStatus',
        'extBackLinks' => 'getExtBackLinks',
        'refDomains' => 'getRefDomains',
        'analysisResUnitsCost' => 'getAnalysisResUnitsCost',
        'aCRank' => 'getACRank',
        'itemType' => 'getItemType',
        'indexedURLs' => 'getIndexedURLs',
        'getTopBackLinksAnalysisResUnitsCost' => 'getGetTopBackLinksAnalysisResUnitsCost',
        'downloadBacklinksAnalysisResUnitsCost' => 'getDownloadBacklinksAnalysisResUnitsCost',
        'downloadRefDomainBacklinksAnalysisResUnitsCost' => 'getDownloadRefDomainBacklinksAnalysisResUnitsCost',
        'refIPs' => 'getRefIPs',
        'refSubNets' => 'getRefSubNets',
        'refDomainsEDU' => 'getRefDomainsEDU',
        'extBackLinksEDU' => 'getExtBackLinksEDU',
        'refDomainsGOV' => 'getRefDomainsGOV',
        'extBackLinksGOV' => 'getExtBackLinksGOV',
        'refDomainsEDUExact' => 'getRefDomainsEDUExact',
        'extBackLinksEDUExact' => 'getExtBackLinksEDUExact',
        'refDomainsGOVExact' => 'getRefDomainsGOVExact',
        'extBackLinksGOVExact' => 'getExtBackLinksGOVExact',
        'crawledFlag' => 'getCrawledFlag',
        'lastCrawlDate' => 'getLastCrawlDate',
        'lastCrawlResult' => 'getLastCrawlResult',
        'redirectFlag' => 'getRedirectFlag',
        'finalRedirectResult' => 'getFinalRedirectResult',
        'outDomainsExternal' => 'getOutDomainsExternal',
        'outLinksExternal' => 'getOutLinksExternal',
        'outLinksInternal' => 'getOutLinksInternal',
        'outLinksPages' => 'getOutLinksPages',
        'lastSeen' => 'getLastSeen',
        'title' => 'getTitle',
        'redirectTo' => 'getRedirectTo',
        'language' => 'getLanguage',
        'languageDesc' => 'getLanguageDesc',
        'languageConfidence' => 'getLanguageConfidence',
        'languagePageRatios' => 'getLanguagePageRatios',
        'languageTotalPages' => 'getLanguageTotalPages',
        'refLanguage' => 'getRefLanguage',
        'refLanguageDesc' => 'getRefLanguageDesc',
        'refLanguageConfidence' => 'getRefLanguageConfidence',
        'refLanguagePageRatios' => 'getRefLanguagePageRatios',
        'refLanguageTotalPages' => 'getRefLanguageTotalPages',
        'crawledURLs' => 'getCrawledURLs',
        'rootDomainIPAddress' => 'getRootDomainIPAddress',
        'totalNonUniqueLinks' => 'getTotalNonUniqueLinks',
        'nonUniqueLinkTypeHomepages' => 'getNonUniqueLinkTypeHomepages',
        'nonUniqueLinkTypeIndirect' => 'getNonUniqueLinkTypeIndirect',
        'nonUniqueLinkTypeDeleted' => 'getNonUniqueLinkTypeDeleted',
        'nonUniqueLinkTypeNoFollow' => 'getNonUniqueLinkTypeNoFollow',
        'nonUniqueLinkTypeProtocolHTTPS' => 'getNonUniqueLinkTypeProtocolHTTPS',
        'nonUniqueLinkTypeFrame' => 'getNonUniqueLinkTypeFrame',
        'nonUniqueLinkTypeImageLink' => 'getNonUniqueLinkTypeImageLink',
        'nonUniqueLinkTypeRedirect' => 'getNonUniqueLinkTypeRedirect',
        'nonUniqueLinkTypeTextLink' => 'getNonUniqueLinkTypeTextLink',
        'refDomainTypeLive' => 'getRefDomainTypeLive',
        'refDomainTypeFollow' => 'getRefDomainTypeFollow',
        'refDomainTypeHomepageLink' => 'getRefDomainTypeHomepageLink',
        'refDomainTypeDirect' => 'getRefDomainTypeDirect',
        'refDomainTypeProtocolHTTPS' => 'getRefDomainTypeProtocolHTTPS',
        'canonicalURL' => 'getCanonicalURL',
        'citationFlow' => 'getCitationFlow',
        'trustFlow' => 'getTrustFlow',
        'trustMetric' => 'getTrustMetric',
        'topicalTrustFlowTopic0' => 'getTopicalTrustFlowTopic0',
        'topicalTrustFlowValue0' => 'getTopicalTrustFlowValue0',
        'topicalTrustFlowTopic1' => 'getTopicalTrustFlowTopic1',
        'topicalTrustFlowValue1' => 'getTopicalTrustFlowValue1',
        'topicalTrustFlowTopic2' => 'getTopicalTrustFlowTopic2',
        'topicalTrustFlowValue2' => 'getTopicalTrustFlowValue2'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['itemNu'] = isset($data['itemNu']) ? $this->createData($data['itemNu'], 'itemNu')  : null;
        $this->container['item'] = isset($data['item']) ? $this->createData($data['item'], 'item')  : null;
        $this->container['resultCode'] = isset($data['resultCode']) ? $this->createData($data['resultCode'], 'resultCode')  : null;
        $this->container['status'] = isset($data['status']) ? $this->createData($data['status'], 'status')  : null;
        $this->container['extBackLinks'] = isset($data['extBackLinks']) ? $this->createData($data['extBackLinks'], 'extBackLinks')  : null;
        $this->container['refDomains'] = isset($data['refDomains']) ? $this->createData($data['refDomains'], 'refDomains')  : null;
        $this->container['analysisResUnitsCost'] = isset($data['analysisResUnitsCost']) ? $this->createData($data['analysisResUnitsCost'], 'analysisResUnitsCost')  : null;
        $this->container['aCRank'] = isset($data['aCRank']) ? $this->createData($data['aCRank'], 'aCRank')  : null;
        $this->container['itemType'] = isset($data['itemType']) ? $this->createData($data['itemType'], 'itemType')  : null;
        $this->container['indexedURLs'] = isset($data['indexedURLs']) ? $this->createData($data['indexedURLs'], 'indexedURLs')  : null;
        $this->container['getTopBackLinksAnalysisResUnitsCost'] = isset($data['getTopBackLinksAnalysisResUnitsCost']) ? $this->createData($data['getTopBackLinksAnalysisResUnitsCost'], 'getTopBackLinksAnalysisResUnitsCost')  : null;
        $this->container['downloadBacklinksAnalysisResUnitsCost'] = isset($data['downloadBacklinksAnalysisResUnitsCost']) ? $this->createData($data['downloadBacklinksAnalysisResUnitsCost'], 'downloadBacklinksAnalysisResUnitsCost')  : null;
        $this->container['downloadRefDomainBacklinksAnalysisResUnitsCost'] = isset($data['downloadRefDomainBacklinksAnalysisResUnitsCost']) ? $this->createData($data['downloadRefDomainBacklinksAnalysisResUnitsCost'], 'downloadRefDomainBacklinksAnalysisResUnitsCost')  : null;
        $this->container['refIPs'] = isset($data['refIPs']) ? $this->createData($data['refIPs'], 'refIPs')  : null;
        $this->container['refSubNets'] = isset($data['refSubNets']) ? $this->createData($data['refSubNets'], 'refSubNets')  : null;
        $this->container['refDomainsEDU'] = isset($data['refDomainsEDU']) ? $this->createData($data['refDomainsEDU'], 'refDomainsEDU')  : null;
        $this->container['extBackLinksEDU'] = isset($data['extBackLinksEDU']) ? $this->createData($data['extBackLinksEDU'], 'extBackLinksEDU')  : null;
        $this->container['refDomainsGOV'] = isset($data['refDomainsGOV']) ? $this->createData($data['refDomainsGOV'], 'refDomainsGOV')  : null;
        $this->container['extBackLinksGOV'] = isset($data['extBackLinksGOV']) ? $this->createData($data['extBackLinksGOV'], 'extBackLinksGOV')  : null;
        $this->container['refDomainsEDUExact'] = isset($data['refDomainsEDUExact']) ? $this->createData($data['refDomainsEDUExact'], 'refDomainsEDUExact')  : null;
        $this->container['extBackLinksEDUExact'] = isset($data['extBackLinksEDUExact']) ? $this->createData($data['extBackLinksEDUExact'], 'extBackLinksEDUExact')  : null;
        $this->container['refDomainsGOVExact'] = isset($data['refDomainsGOVExact']) ? $this->createData($data['refDomainsGOVExact'], 'refDomainsGOVExact')  : null;
        $this->container['extBackLinksGOVExact'] = isset($data['extBackLinksGOVExact']) ? $this->createData($data['extBackLinksGOVExact'], 'extBackLinksGOVExact')  : null;
        $this->container['crawledFlag'] = isset($data['crawledFlag']) ? $this->createData($data['crawledFlag'], 'crawledFlag')  : null;
        $this->container['lastCrawlDate'] = isset($data['lastCrawlDate']) ? $this->createData($data['lastCrawlDate'], 'lastCrawlDate')  : null;
        $this->container['lastCrawlResult'] = isset($data['lastCrawlResult']) ? $this->createData($data['lastCrawlResult'], 'lastCrawlResult')  : null;
        $this->container['redirectFlag'] = isset($data['redirectFlag']) ? $this->createData($data['redirectFlag'], 'redirectFlag')  : null;
        $this->container['finalRedirectResult'] = isset($data['finalRedirectResult']) ? $this->createData($data['finalRedirectResult'], 'finalRedirectResult')  : null;
        $this->container['outDomainsExternal'] = isset($data['outDomainsExternal']) ? $this->createData($data['outDomainsExternal'], 'outDomainsExternal')  : null;
        $this->container['outLinksExternal'] = isset($data['outLinksExternal']) ? $this->createData($data['outLinksExternal'], 'outLinksExternal')  : null;
        $this->container['outLinksInternal'] = isset($data['outLinksInternal']) ? $this->createData($data['outLinksInternal'], 'outLinksInternal')  : null;
        $this->container['outLinksPages'] = isset($data['outLinksPages']) ? $this->createData($data['outLinksPages'], 'outLinksPages')  : null;
        $this->container['lastSeen'] = isset($data['lastSeen']) ? $this->createData($data['lastSeen'], 'lastSeen')  : null;
        $this->container['title'] = isset($data['title']) ? $this->createData($data['title'], 'title')  : null;
        $this->container['redirectTo'] = isset($data['redirectTo']) ? $this->createData($data['redirectTo'], 'redirectTo')  : null;
        $this->container['language'] = isset($data['language']) ? $this->createData($data['language'], 'language')  : null;
        $this->container['languageDesc'] = isset($data['languageDesc']) ? $this->createData($data['languageDesc'], 'languageDesc')  : null;
        $this->container['languageConfidence'] = isset($data['languageConfidence']) ? $this->createData($data['languageConfidence'], 'languageConfidence')  : null;
        $this->container['languagePageRatios'] = isset($data['languagePageRatios']) ? $this->createData($data['languagePageRatios'], 'languagePageRatios')  : null;
        $this->container['languageTotalPages'] = isset($data['languageTotalPages']) ? $this->createData($data['languageTotalPages'], 'languageTotalPages')  : null;
        $this->container['refLanguage'] = isset($data['refLanguage']) ? $this->createData($data['refLanguage'], 'refLanguage')  : null;
        $this->container['refLanguageDesc'] = isset($data['refLanguageDesc']) ? $this->createData($data['refLanguageDesc'], 'refLanguageDesc')  : null;
        $this->container['refLanguageConfidence'] = isset($data['refLanguageConfidence']) ? $this->createData($data['refLanguageConfidence'], 'refLanguageConfidence')  : null;
        $this->container['refLanguagePageRatios'] = isset($data['refLanguagePageRatios']) ? $this->createData($data['refLanguagePageRatios'], 'refLanguagePageRatios')  : null;
        $this->container['refLanguageTotalPages'] = isset($data['refLanguageTotalPages']) ? $this->createData($data['refLanguageTotalPages'], 'refLanguageTotalPages')  : null;
        $this->container['crawledURLs'] = isset($data['crawledURLs']) ? $this->createData($data['crawledURLs'], 'crawledURLs')  : null;
        $this->container['rootDomainIPAddress'] = isset($data['rootDomainIPAddress']) ? $this->createData($data['rootDomainIPAddress'], 'rootDomainIPAddress')  : null;
        $this->container['totalNonUniqueLinks'] = isset($data['totalNonUniqueLinks']) ? $this->createData($data['totalNonUniqueLinks'], 'totalNonUniqueLinks')  : null;
        $this->container['nonUniqueLinkTypeHomepages'] = isset($data['nonUniqueLinkTypeHomepages']) ? $this->createData($data['nonUniqueLinkTypeHomepages'], 'nonUniqueLinkTypeHomepages')  : null;
        $this->container['nonUniqueLinkTypeIndirect'] = isset($data['nonUniqueLinkTypeIndirect']) ? $this->createData($data['nonUniqueLinkTypeIndirect'], 'nonUniqueLinkTypeIndirect')  : null;
        $this->container['nonUniqueLinkTypeDeleted'] = isset($data['nonUniqueLinkTypeDeleted']) ? $this->createData($data['nonUniqueLinkTypeDeleted'], 'nonUniqueLinkTypeDeleted')  : null;
        $this->container['nonUniqueLinkTypeNoFollow'] = isset($data['nonUniqueLinkTypeNoFollow']) ? $this->createData($data['nonUniqueLinkTypeNoFollow'], 'nonUniqueLinkTypeNoFollow')  : null;
        $this->container['nonUniqueLinkTypeProtocolHTTPS'] = isset($data['nonUniqueLinkTypeProtocolHTTPS']) ? $this->createData($data['nonUniqueLinkTypeProtocolHTTPS'], 'nonUniqueLinkTypeProtocolHTTPS')  : null;
        $this->container['nonUniqueLinkTypeFrame'] = isset($data['nonUniqueLinkTypeFrame']) ? $this->createData($data['nonUniqueLinkTypeFrame'], 'nonUniqueLinkTypeFrame')  : null;
        $this->container['nonUniqueLinkTypeImageLink'] = isset($data['nonUniqueLinkTypeImageLink']) ? $this->createData($data['nonUniqueLinkTypeImageLink'], 'nonUniqueLinkTypeImageLink')  : null;
        $this->container['nonUniqueLinkTypeRedirect'] = isset($data['nonUniqueLinkTypeRedirect']) ? $this->createData($data['nonUniqueLinkTypeRedirect'], 'nonUniqueLinkTypeRedirect')  : null;
        $this->container['nonUniqueLinkTypeTextLink'] = isset($data['nonUniqueLinkTypeTextLink']) ? $this->createData($data['nonUniqueLinkTypeTextLink'], 'nonUniqueLinkTypeTextLink')  : null;
        $this->container['refDomainTypeLive'] = isset($data['refDomainTypeLive']) ? $this->createData($data['refDomainTypeLive'], 'refDomainTypeLive')  : null;
        $this->container['refDomainTypeFollow'] = isset($data['refDomainTypeFollow']) ? $this->createData($data['refDomainTypeFollow'], 'refDomainTypeFollow')  : null;
        $this->container['refDomainTypeHomepageLink'] = isset($data['refDomainTypeHomepageLink']) ? $this->createData($data['refDomainTypeHomepageLink'], 'refDomainTypeHomepageLink')  : null;
        $this->container['refDomainTypeDirect'] = isset($data['refDomainTypeDirect']) ? $this->createData($data['refDomainTypeDirect'], 'refDomainTypeDirect')  : null;
        $this->container['refDomainTypeProtocolHTTPS'] = isset($data['refDomainTypeProtocolHTTPS']) ? $this->createData($data['refDomainTypeProtocolHTTPS'], 'refDomainTypeProtocolHTTPS')  : null;
        $this->container['canonicalURL'] = isset($data['canonicalURL']) ? $this->createData($data['canonicalURL'], 'canonicalURL')  : null;
        $this->container['citationFlow'] = isset($data['citationFlow']) ? $this->createData($data['citationFlow'], 'citationFlow')  : null;
        $this->container['trustFlow'] = isset($data['trustFlow']) ? $this->createData($data['trustFlow'], 'trustFlow')  : null;
        $this->container['trustMetric'] = isset($data['trustMetric']) ? $this->createData($data['trustMetric'], 'trustMetric')  : null;
        $this->container['topicalTrustFlowTopic0'] = isset($data['topicalTrustFlowTopic0']) ? $this->createData($data['topicalTrustFlowTopic0'], 'topicalTrustFlowTopic0')  : null;
        $this->container['topicalTrustFlowValue0'] = isset($data['topicalTrustFlowValue0']) ? $this->createData($data['topicalTrustFlowValue0'], 'topicalTrustFlowValue0')  : null;
        $this->container['topicalTrustFlowTopic1'] = isset($data['topicalTrustFlowTopic1']) ? $this->createData($data['topicalTrustFlowTopic1'], 'topicalTrustFlowTopic1')  : null;
        $this->container['topicalTrustFlowValue1'] = isset($data['topicalTrustFlowValue1']) ? $this->createData($data['topicalTrustFlowValue1'], 'topicalTrustFlowValue1')  : null;
        $this->container['topicalTrustFlowTopic2'] = isset($data['topicalTrustFlowTopic2']) ? $this->createData($data['topicalTrustFlowTopic2'], 'topicalTrustFlowTopic2')  : null;
        $this->container['topicalTrustFlowValue2'] = isset($data['topicalTrustFlowValue2']) ? $this->createData($data['topicalTrustFlowValue2'], 'topicalTrustFlowValue2')  : null;
    }

    /**
     * create data according to types;
     * non object types will just be returend as is:
     * object types will return an instance of themselves or and array of instances
     *
     * @param mixed[] $data
     * @param string $property
     * @return mixed
     */
    public function createData($data = null, $property)
    {
        if ($data === null) {
            return '';
        }
        $swaggerType = self::$swaggerTypes[$property];

        preg_match("/([\\\\\w\d]+)(\[\])?/", $swaggerType, $matches);

        // handle object types
        if (count($matches) > 0 && count($matches) < 3) {
            try {
                $reflection = new \ReflectionClass($swaggerType);
                $reflectionInstance = $reflection->newInstance($data);

                return $reflectionInstance;
            } catch (\Exception $ex) {
                return $data;
            }
        } elseif (count($matches) >= 3) {
            // Object[]
            // arrays of objects have to be handled differently
            $reflectionInstances = [];
            foreach ($data as $d) {
                try {
                    $reflection = new \ReflectionClass(str_replace("[]", "", $swaggerType));
                    $reflectionInstances[] = $reflection->newInstance($d);

                    return $reflectionInstances;
                } catch (\Exception $ex) {
                    return $data;
                }
            }
        }

        return $data;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the 
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets itemNu
     *
     * @return string
     */
    public function getItemNu()
    {
        return $this->container['itemNu'];
    }

    /**
     * Sets itemNu
     *
     * @param string $itemNu itemNu
     *
     * @return $this
     */
    public function setItemNu($itemNu)
    {
        $this->container['itemNu'] = $itemNu;

        return $this;
    }

    /**
     * Gets item
     *
     * @return string
     */
    public function getItem()
    {
        return $this->container['item'];
    }

    /**
     * Sets item
     *
     * @param string $item item
     *
     * @return $this
     */
    public function setItem($item)
    {
        $this->container['item'] = $item;

        return $this;
    }

    /**
     * Gets resultCode
     *
     * @return string
     */
    public function getResultCode()
    {
        return $this->container['resultCode'];
    }

    /**
     * Sets resultCode
     *
     * @param string $resultCode resultCode
     *
     * @return $this
     */
    public function setResultCode($resultCode)
    {
        $this->container['resultCode'] = $resultCode;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets extBackLinks
     *
     * @return string
     */
    public function getExtBackLinks()
    {
        return $this->container['extBackLinks'];
    }

    /**
     * Sets extBackLinks
     *
     * @param string $extBackLinks extBackLinks
     *
     * @return $this
     */
    public function setExtBackLinks($extBackLinks)
    {
        $this->container['extBackLinks'] = $extBackLinks;

        return $this;
    }

    /**
     * Gets refDomains
     *
     * @return string
     */
    public function getRefDomains()
    {
        return $this->container['refDomains'];
    }

    /**
     * Sets refDomains
     *
     * @param string $refDomains refDomains
     *
     * @return $this
     */
    public function setRefDomains($refDomains)
    {
        $this->container['refDomains'] = $refDomains;

        return $this;
    }

    /**
     * Gets analysisResUnitsCost
     *
     * @return string
     */
    public function getAnalysisResUnitsCost()
    {
        return $this->container['analysisResUnitsCost'];
    }

    /**
     * Sets analysisResUnitsCost
     *
     * @param string $analysisResUnitsCost analysisResUnitsCost
     *
     * @return $this
     */
    public function setAnalysisResUnitsCost($analysisResUnitsCost)
    {
        $this->container['analysisResUnitsCost'] = $analysisResUnitsCost;

        return $this;
    }

    /**
     * Gets aCRank
     *
     * @return string
     */
    public function getACRank()
    {
        return $this->container['aCRank'];
    }

    /**
     * Sets aCRank
     *
     * @param string $aCRank aCRank
     *
     * @return $this
     */
    public function setACRank($aCRank)
    {
        $this->container['aCRank'] = $aCRank;

        return $this;
    }

    /**
     * Gets itemType
     *
     * @return string
     */
    public function getItemType()
    {
        return $this->container['itemType'];
    }

    /**
     * Sets itemType
     *
     * @param string $itemType itemType
     *
     * @return $this
     */
    public function setItemType($itemType)
    {
        $this->container['itemType'] = $itemType;

        return $this;
    }

    /**
     * Gets indexedURLs
     *
     * @return string
     */
    public function getIndexedURLs()
    {
        return $this->container['indexedURLs'];
    }

    /**
     * Sets indexedURLs
     *
     * @param string $indexedURLs indexedURLs
     *
     * @return $this
     */
    public function setIndexedURLs($indexedURLs)
    {
        $this->container['indexedURLs'] = $indexedURLs;

        return $this;
    }

    /**
     * Gets getTopBackLinksAnalysisResUnitsCost
     *
     * @return string
     */
    public function getGetTopBackLinksAnalysisResUnitsCost()
    {
        return $this->container['getTopBackLinksAnalysisResUnitsCost'];
    }

    /**
     * Sets getTopBackLinksAnalysisResUnitsCost
     *
     * @param string $getTopBackLinksAnalysisResUnitsCost getTopBackLinksAnalysisResUnitsCost
     *
     * @return $this
     */
    public function setGetTopBackLinksAnalysisResUnitsCost($getTopBackLinksAnalysisResUnitsCost)
    {
        $this->container['getTopBackLinksAnalysisResUnitsCost'] = $getTopBackLinksAnalysisResUnitsCost;

        return $this;
    }

    /**
     * Gets downloadBacklinksAnalysisResUnitsCost
     *
     * @return string
     */
    public function getDownloadBacklinksAnalysisResUnitsCost()
    {
        return $this->container['downloadBacklinksAnalysisResUnitsCost'];
    }

    /**
     * Sets downloadBacklinksAnalysisResUnitsCost
     *
     * @param string $downloadBacklinksAnalysisResUnitsCost downloadBacklinksAnalysisResUnitsCost
     *
     * @return $this
     */
    public function setDownloadBacklinksAnalysisResUnitsCost($downloadBacklinksAnalysisResUnitsCost)
    {
        $this->container['downloadBacklinksAnalysisResUnitsCost'] = $downloadBacklinksAnalysisResUnitsCost;

        return $this;
    }

    /**
     * Gets downloadRefDomainBacklinksAnalysisResUnitsCost
     *
     * @return string
     */
    public function getDownloadRefDomainBacklinksAnalysisResUnitsCost()
    {
        return $this->container['downloadRefDomainBacklinksAnalysisResUnitsCost'];
    }

    /**
     * Sets downloadRefDomainBacklinksAnalysisResUnitsCost
     *
     * @param string $downloadRefDomainBacklinksAnalysisResUnitsCost downloadRefDomainBacklinksAnalysisResUnitsCost
     *
     * @return $this
     */
    public function setDownloadRefDomainBacklinksAnalysisResUnitsCost($downloadRefDomainBacklinksAnalysisResUnitsCost)
    {
        $this->container['downloadRefDomainBacklinksAnalysisResUnitsCost'] = $downloadRefDomainBacklinksAnalysisResUnitsCost;

        return $this;
    }

    /**
     * Gets refIPs
     *
     * @return string
     */
    public function getRefIPs()
    {
        return $this->container['refIPs'];
    }

    /**
     * Sets refIPs
     *
     * @param string $refIPs refIPs
     *
     * @return $this
     */
    public function setRefIPs($refIPs)
    {
        $this->container['refIPs'] = $refIPs;

        return $this;
    }

    /**
     * Gets refSubNets
     *
     * @return string
     */
    public function getRefSubNets()
    {
        return $this->container['refSubNets'];
    }

    /**
     * Sets refSubNets
     *
     * @param string $refSubNets refSubNets
     *
     * @return $this
     */
    public function setRefSubNets($refSubNets)
    {
        $this->container['refSubNets'] = $refSubNets;

        return $this;
    }

    /**
     * Gets refDomainsEDU
     *
     * @return string
     */
    public function getRefDomainsEDU()
    {
        return $this->container['refDomainsEDU'];
    }

    /**
     * Sets refDomainsEDU
     *
     * @param string $refDomainsEDU refDomainsEDU
     *
     * @return $this
     */
    public function setRefDomainsEDU($refDomainsEDU)
    {
        $this->container['refDomainsEDU'] = $refDomainsEDU;

        return $this;
    }

    /**
     * Gets extBackLinksEDU
     *
     * @return string
     */
    public function getExtBackLinksEDU()
    {
        return $this->container['extBackLinksEDU'];
    }

    /**
     * Sets extBackLinksEDU
     *
     * @param string $extBackLinksEDU extBackLinksEDU
     *
     * @return $this
     */
    public function setExtBackLinksEDU($extBackLinksEDU)
    {
        $this->container['extBackLinksEDU'] = $extBackLinksEDU;

        return $this;
    }

    /**
     * Gets refDomainsGOV
     *
     * @return string
     */
    public function getRefDomainsGOV()
    {
        return $this->container['refDomainsGOV'];
    }

    /**
     * Sets refDomainsGOV
     *
     * @param string $refDomainsGOV refDomainsGOV
     *
     * @return $this
     */
    public function setRefDomainsGOV($refDomainsGOV)
    {
        $this->container['refDomainsGOV'] = $refDomainsGOV;

        return $this;
    }

    /**
     * Gets extBackLinksGOV
     *
     * @return string
     */
    public function getExtBackLinksGOV()
    {
        return $this->container['extBackLinksGOV'];
    }

    /**
     * Sets extBackLinksGOV
     *
     * @param string $extBackLinksGOV extBackLinksGOV
     *
     * @return $this
     */
    public function setExtBackLinksGOV($extBackLinksGOV)
    {
        $this->container['extBackLinksGOV'] = $extBackLinksGOV;

        return $this;
    }

    /**
     * Gets refDomainsEDUExact
     *
     * @return string
     */
    public function getRefDomainsEDUExact()
    {
        return $this->container['refDomainsEDUExact'];
    }

    /**
     * Sets refDomainsEDUExact
     *
     * @param string $refDomainsEDUExact refDomainsEDUExact
     *
     * @return $this
     */
    public function setRefDomainsEDUExact($refDomainsEDUExact)
    {
        $this->container['refDomainsEDUExact'] = $refDomainsEDUExact;

        return $this;
    }

    /**
     * Gets extBackLinksEDUExact
     *
     * @return string
     */
    public function getExtBackLinksEDUExact()
    {
        return $this->container['extBackLinksEDUExact'];
    }

    /**
     * Sets extBackLinksEDUExact
     *
     * @param string $extBackLinksEDUExact extBackLinksEDUExact
     *
     * @return $this
     */
    public function setExtBackLinksEDUExact($extBackLinksEDUExact)
    {
        $this->container['extBackLinksEDUExact'] = $extBackLinksEDUExact;

        return $this;
    }

    /**
     * Gets refDomainsGOVExact
     *
     * @return string
     */
    public function getRefDomainsGOVExact()
    {
        return $this->container['refDomainsGOVExact'];
    }

    /**
     * Sets refDomainsGOVExact
     *
     * @param string $refDomainsGOVExact refDomainsGOVExact
     *
     * @return $this
     */
    public function setRefDomainsGOVExact($refDomainsGOVExact)
    {
        $this->container['refDomainsGOVExact'] = $refDomainsGOVExact;

        return $this;
    }

    /**
     * Gets extBackLinksGOVExact
     *
     * @return string
     */
    public function getExtBackLinksGOVExact()
    {
        return $this->container['extBackLinksGOVExact'];
    }

    /**
     * Sets extBackLinksGOVExact
     *
     * @param string $extBackLinksGOVExact extBackLinksGOVExact
     *
     * @return $this
     */
    public function setExtBackLinksGOVExact($extBackLinksGOVExact)
    {
        $this->container['extBackLinksGOVExact'] = $extBackLinksGOVExact;

        return $this;
    }

    /**
     * Gets crawledFlag
     *
     * @return string
     */
    public function getCrawledFlag()
    {
        return $this->container['crawledFlag'];
    }

    /**
     * Sets crawledFlag
     *
     * @param string $crawledFlag crawledFlag
     *
     * @return $this
     */
    public function setCrawledFlag($crawledFlag)
    {
        $this->container['crawledFlag'] = $crawledFlag;

        return $this;
    }

    /**
     * Gets lastCrawlDate
     *
     * @return string
     */
    public function getLastCrawlDate()
    {
        return $this->container['lastCrawlDate'];
    }

    /**
     * Sets lastCrawlDate
     *
     * @param string $lastCrawlDate lastCrawlDate
     *
     * @return $this
     */
    public function setLastCrawlDate($lastCrawlDate)
    {
        $this->container['lastCrawlDate'] = $lastCrawlDate;

        return $this;
    }

    /**
     * Gets lastCrawlResult
     *
     * @return string
     */
    public function getLastCrawlResult()
    {
        return $this->container['lastCrawlResult'];
    }

    /**
     * Sets lastCrawlResult
     *
     * @param string $lastCrawlResult lastCrawlResult
     *
     * @return $this
     */
    public function setLastCrawlResult($lastCrawlResult)
    {
        $this->container['lastCrawlResult'] = $lastCrawlResult;

        return $this;
    }

    /**
     * Gets redirectFlag
     *
     * @return string
     */
    public function getRedirectFlag()
    {
        return $this->container['redirectFlag'];
    }

    /**
     * Sets redirectFlag
     *
     * @param string $redirectFlag redirectFlag
     *
     * @return $this
     */
    public function setRedirectFlag($redirectFlag)
    {
        $this->container['redirectFlag'] = $redirectFlag;

        return $this;
    }

    /**
     * Gets finalRedirectResult
     *
     * @return string
     */
    public function getFinalRedirectResult()
    {
        return $this->container['finalRedirectResult'];
    }

    /**
     * Sets finalRedirectResult
     *
     * @param string $finalRedirectResult finalRedirectResult
     *
     * @return $this
     */
    public function setFinalRedirectResult($finalRedirectResult)
    {
        $this->container['finalRedirectResult'] = $finalRedirectResult;

        return $this;
    }

    /**
     * Gets outDomainsExternal
     *
     * @return string
     */
    public function getOutDomainsExternal()
    {
        return $this->container['outDomainsExternal'];
    }

    /**
     * Sets outDomainsExternal
     *
     * @param string $outDomainsExternal outDomainsExternal
     *
     * @return $this
     */
    public function setOutDomainsExternal($outDomainsExternal)
    {
        $this->container['outDomainsExternal'] = $outDomainsExternal;

        return $this;
    }

    /**
     * Gets outLinksExternal
     *
     * @return string
     */
    public function getOutLinksExternal()
    {
        return $this->container['outLinksExternal'];
    }

    /**
     * Sets outLinksExternal
     *
     * @param string $outLinksExternal outLinksExternal
     *
     * @return $this
     */
    public function setOutLinksExternal($outLinksExternal)
    {
        $this->container['outLinksExternal'] = $outLinksExternal;

        return $this;
    }

    /**
     * Gets outLinksInternal
     *
     * @return string
     */
    public function getOutLinksInternal()
    {
        return $this->container['outLinksInternal'];
    }

    /**
     * Sets outLinksInternal
     *
     * @param string $outLinksInternal outLinksInternal
     *
     * @return $this
     */
    public function setOutLinksInternal($outLinksInternal)
    {
        $this->container['outLinksInternal'] = $outLinksInternal;

        return $this;
    }

    /**
     * Gets outLinksPages
     *
     * @return string
     */
    public function getOutLinksPages()
    {
        return $this->container['outLinksPages'];
    }

    /**
     * Sets outLinksPages
     *
     * @param string $outLinksPages outLinksPages
     *
     * @return $this
     */
    public function setOutLinksPages($outLinksPages)
    {
        $this->container['outLinksPages'] = $outLinksPages;

        return $this;
    }

    /**
     * Gets lastSeen
     *
     * @return string
     */
    public function getLastSeen()
    {
        return $this->container['lastSeen'];
    }

    /**
     * Sets lastSeen
     *
     * @param string $lastSeen lastSeen
     *
     * @return $this
     */
    public function setLastSeen($lastSeen)
    {
        $this->container['lastSeen'] = $lastSeen;

        return $this;
    }

    /**
     * Gets title
     *
     * @return string
     */
    public function getTitle()
    {
        return $this->container['title'];
    }

    /**
     * Sets title
     *
     * @param string $title title
     *
     * @return $this
     */
    public function setTitle($title)
    {
        $this->container['title'] = $title;

        return $this;
    }

    /**
     * Gets redirectTo
     *
     * @return string
     */
    public function getRedirectTo()
    {
        return $this->container['redirectTo'];
    }

    /**
     * Sets redirectTo
     *
     * @param string $redirectTo redirectTo
     *
     * @return $this
     */
    public function setRedirectTo($redirectTo)
    {
        $this->container['redirectTo'] = $redirectTo;

        return $this;
    }

    /**
     * Gets language
     *
     * @return string
     */
    public function getLanguage()
    {
        return $this->container['language'];
    }

    /**
     * Sets language
     *
     * @param string $language language
     *
     * @return $this
     */
    public function setLanguage($language)
    {
        $this->container['language'] = $language;

        return $this;
    }

    /**
     * Gets languageDesc
     *
     * @return string
     */
    public function getLanguageDesc()
    {
        return $this->container['languageDesc'];
    }

    /**
     * Sets languageDesc
     *
     * @param string $languageDesc languageDesc
     *
     * @return $this
     */
    public function setLanguageDesc($languageDesc)
    {
        $this->container['languageDesc'] = $languageDesc;

        return $this;
    }

    /**
     * Gets languageConfidence
     *
     * @return string
     */
    public function getLanguageConfidence()
    {
        return $this->container['languageConfidence'];
    }

    /**
     * Sets languageConfidence
     *
     * @param string $languageConfidence languageConfidence
     *
     * @return $this
     */
    public function setLanguageConfidence($languageConfidence)
    {
        $this->container['languageConfidence'] = $languageConfidence;

        return $this;
    }

    /**
     * Gets languagePageRatios
     *
     * @return string
     */
    public function getLanguagePageRatios()
    {
        return $this->container['languagePageRatios'];
    }

    /**
     * Sets languagePageRatios
     *
     * @param string $languagePageRatios languagePageRatios
     *
     * @return $this
     */
    public function setLanguagePageRatios($languagePageRatios)
    {
        $this->container['languagePageRatios'] = $languagePageRatios;

        return $this;
    }

    /**
     * Gets languageTotalPages
     *
     * @return string
     */
    public function getLanguageTotalPages()
    {
        return $this->container['languageTotalPages'];
    }

    /**
     * Sets languageTotalPages
     *
     * @param string $languageTotalPages languageTotalPages
     *
     * @return $this
     */
    public function setLanguageTotalPages($languageTotalPages)
    {
        $this->container['languageTotalPages'] = $languageTotalPages;

        return $this;
    }

    /**
     * Gets refLanguage
     *
     * @return string
     */
    public function getRefLanguage()
    {
        return $this->container['refLanguage'];
    }

    /**
     * Sets refLanguage
     *
     * @param string $refLanguage refLanguage
     *
     * @return $this
     */
    public function setRefLanguage($refLanguage)
    {
        $this->container['refLanguage'] = $refLanguage;

        return $this;
    }

    /**
     * Gets refLanguageDesc
     *
     * @return string
     */
    public function getRefLanguageDesc()
    {
        return $this->container['refLanguageDesc'];
    }

    /**
     * Sets refLanguageDesc
     *
     * @param string $refLanguageDesc refLanguageDesc
     *
     * @return $this
     */
    public function setRefLanguageDesc($refLanguageDesc)
    {
        $this->container['refLanguageDesc'] = $refLanguageDesc;

        return $this;
    }

    /**
     * Gets refLanguageConfidence
     *
     * @return string
     */
    public function getRefLanguageConfidence()
    {
        return $this->container['refLanguageConfidence'];
    }

    /**
     * Sets refLanguageConfidence
     *
     * @param string $refLanguageConfidence refLanguageConfidence
     *
     * @return $this
     */
    public function setRefLanguageConfidence($refLanguageConfidence)
    {
        $this->container['refLanguageConfidence'] = $refLanguageConfidence;

        return $this;
    }

    /**
     * Gets refLanguagePageRatios
     *
     * @return string
     */
    public function getRefLanguagePageRatios()
    {
        return $this->container['refLanguagePageRatios'];
    }

    /**
     * Sets refLanguagePageRatios
     *
     * @param string $refLanguagePageRatios refLanguagePageRatios
     *
     * @return $this
     */
    public function setRefLanguagePageRatios($refLanguagePageRatios)
    {
        $this->container['refLanguagePageRatios'] = $refLanguagePageRatios;

        return $this;
    }

    /**
     * Gets refLanguageTotalPages
     *
     * @return string
     */
    public function getRefLanguageTotalPages()
    {
        return $this->container['refLanguageTotalPages'];
    }

    /**
     * Sets refLanguageTotalPages
     *
     * @param string $refLanguageTotalPages refLanguageTotalPages
     *
     * @return $this
     */
    public function setRefLanguageTotalPages($refLanguageTotalPages)
    {
        $this->container['refLanguageTotalPages'] = $refLanguageTotalPages;

        return $this;
    }

    /**
     * Gets crawledURLs
     *
     * @return string
     */
    public function getCrawledURLs()
    {
        return $this->container['crawledURLs'];
    }

    /**
     * Sets crawledURLs
     *
     * @param string $crawledURLs crawledURLs
     *
     * @return $this
     */
    public function setCrawledURLs($crawledURLs)
    {
        $this->container['crawledURLs'] = $crawledURLs;

        return $this;
    }

    /**
     * Gets rootDomainIPAddress
     *
     * @return string
     */
    public function getRootDomainIPAddress()
    {
        return $this->container['rootDomainIPAddress'];
    }

    /**
     * Sets rootDomainIPAddress
     *
     * @param string $rootDomainIPAddress rootDomainIPAddress
     *
     * @return $this
     */
    public function setRootDomainIPAddress($rootDomainIPAddress)
    {
        $this->container['rootDomainIPAddress'] = $rootDomainIPAddress;

        return $this;
    }

    /**
     * Gets totalNonUniqueLinks
     *
     * @return string
     */
    public function getTotalNonUniqueLinks()
    {
        return $this->container['totalNonUniqueLinks'];
    }

    /**
     * Sets totalNonUniqueLinks
     *
     * @param string $totalNonUniqueLinks totalNonUniqueLinks
     *
     * @return $this
     */
    public function setTotalNonUniqueLinks($totalNonUniqueLinks)
    {
        $this->container['totalNonUniqueLinks'] = $totalNonUniqueLinks;

        return $this;
    }

    /**
     * Gets nonUniqueLinkTypeHomepages
     *
     * @return string
     */
    public function getNonUniqueLinkTypeHomepages()
    {
        return $this->container['nonUniqueLinkTypeHomepages'];
    }

    /**
     * Sets nonUniqueLinkTypeHomepages
     *
     * @param string $nonUniqueLinkTypeHomepages nonUniqueLinkTypeHomepages
     *
     * @return $this
     */
    public function setNonUniqueLinkTypeHomepages($nonUniqueLinkTypeHomepages)
    {
        $this->container['nonUniqueLinkTypeHomepages'] = $nonUniqueLinkTypeHomepages;

        return $this;
    }

    /**
     * Gets nonUniqueLinkTypeIndirect
     *
     * @return string
     */
    public function getNonUniqueLinkTypeIndirect()
    {
        return $this->container['nonUniqueLinkTypeIndirect'];
    }

    /**
     * Sets nonUniqueLinkTypeIndirect
     *
     * @param string $nonUniqueLinkTypeIndirect nonUniqueLinkTypeIndirect
     *
     * @return $this
     */
    public function setNonUniqueLinkTypeIndirect($nonUniqueLinkTypeIndirect)
    {
        $this->container['nonUniqueLinkTypeIndirect'] = $nonUniqueLinkTypeIndirect;

        return $this;
    }

    /**
     * Gets nonUniqueLinkTypeDeleted
     *
     * @return string
     */
    public function getNonUniqueLinkTypeDeleted()
    {
        return $this->container['nonUniqueLinkTypeDeleted'];
    }

    /**
     * Sets nonUniqueLinkTypeDeleted
     *
     * @param string $nonUniqueLinkTypeDeleted nonUniqueLinkTypeDeleted
     *
     * @return $this
     */
    public function setNonUniqueLinkTypeDeleted($nonUniqueLinkTypeDeleted)
    {
        $this->container['nonUniqueLinkTypeDeleted'] = $nonUniqueLinkTypeDeleted;

        return $this;
    }

    /**
     * Gets nonUniqueLinkTypeNoFollow
     *
     * @return string
     */
    public function getNonUniqueLinkTypeNoFollow()
    {
        return $this->container['nonUniqueLinkTypeNoFollow'];
    }

    /**
     * Sets nonUniqueLinkTypeNoFollow
     *
     * @param string $nonUniqueLinkTypeNoFollow nonUniqueLinkTypeNoFollow
     *
     * @return $this
     */
    public function setNonUniqueLinkTypeNoFollow($nonUniqueLinkTypeNoFollow)
    {
        $this->container['nonUniqueLinkTypeNoFollow'] = $nonUniqueLinkTypeNoFollow;

        return $this;
    }

    /**
     * Gets nonUniqueLinkTypeProtocolHTTPS
     *
     * @return string
     */
    public function getNonUniqueLinkTypeProtocolHTTPS()
    {
        return $this->container['nonUniqueLinkTypeProtocolHTTPS'];
    }

    /**
     * Sets nonUniqueLinkTypeProtocolHTTPS
     *
     * @param string $nonUniqueLinkTypeProtocolHTTPS nonUniqueLinkTypeProtocolHTTPS
     *
     * @return $this
     */
    public function setNonUniqueLinkTypeProtocolHTTPS($nonUniqueLinkTypeProtocolHTTPS)
    {
        $this->container['nonUniqueLinkTypeProtocolHTTPS'] = $nonUniqueLinkTypeProtocolHTTPS;

        return $this;
    }

    /**
     * Gets nonUniqueLinkTypeFrame
     *
     * @return string
     */
    public function getNonUniqueLinkTypeFrame()
    {
        return $this->container['nonUniqueLinkTypeFrame'];
    }

    /**
     * Sets nonUniqueLinkTypeFrame
     *
     * @param string $nonUniqueLinkTypeFrame nonUniqueLinkTypeFrame
     *
     * @return $this
     */
    public function setNonUniqueLinkTypeFrame($nonUniqueLinkTypeFrame)
    {
        $this->container['nonUniqueLinkTypeFrame'] = $nonUniqueLinkTypeFrame;

        return $this;
    }

    /**
     * Gets nonUniqueLinkTypeImageLink
     *
     * @return string
     */
    public function getNonUniqueLinkTypeImageLink()
    {
        return $this->container['nonUniqueLinkTypeImageLink'];
    }

    /**
     * Sets nonUniqueLinkTypeImageLink
     *
     * @param string $nonUniqueLinkTypeImageLink nonUniqueLinkTypeImageLink
     *
     * @return $this
     */
    public function setNonUniqueLinkTypeImageLink($nonUniqueLinkTypeImageLink)
    {
        $this->container['nonUniqueLinkTypeImageLink'] = $nonUniqueLinkTypeImageLink;

        return $this;
    }

    /**
     * Gets nonUniqueLinkTypeRedirect
     *
     * @return string
     */
    public function getNonUniqueLinkTypeRedirect()
    {
        return $this->container['nonUniqueLinkTypeRedirect'];
    }

    /**
     * Sets nonUniqueLinkTypeRedirect
     *
     * @param string $nonUniqueLinkTypeRedirect nonUniqueLinkTypeRedirect
     *
     * @return $this
     */
    public function setNonUniqueLinkTypeRedirect($nonUniqueLinkTypeRedirect)
    {
        $this->container['nonUniqueLinkTypeRedirect'] = $nonUniqueLinkTypeRedirect;

        return $this;
    }

    /**
     * Gets nonUniqueLinkTypeTextLink
     *
     * @return string
     */
    public function getNonUniqueLinkTypeTextLink()
    {
        return $this->container['nonUniqueLinkTypeTextLink'];
    }

    /**
     * Sets nonUniqueLinkTypeTextLink
     *
     * @param string $nonUniqueLinkTypeTextLink nonUniqueLinkTypeTextLink
     *
     * @return $this
     */
    public function setNonUniqueLinkTypeTextLink($nonUniqueLinkTypeTextLink)
    {
        $this->container['nonUniqueLinkTypeTextLink'] = $nonUniqueLinkTypeTextLink;

        return $this;
    }

    /**
     * Gets refDomainTypeLive
     *
     * @return string
     */
    public function getRefDomainTypeLive()
    {
        return $this->container['refDomainTypeLive'];
    }

    /**
     * Sets refDomainTypeLive
     *
     * @param string $refDomainTypeLive refDomainTypeLive
     *
     * @return $this
     */
    public function setRefDomainTypeLive($refDomainTypeLive)
    {
        $this->container['refDomainTypeLive'] = $refDomainTypeLive;

        return $this;
    }

    /**
     * Gets refDomainTypeFollow
     *
     * @return string
     */
    public function getRefDomainTypeFollow()
    {
        return $this->container['refDomainTypeFollow'];
    }

    /**
     * Sets refDomainTypeFollow
     *
     * @param string $refDomainTypeFollow refDomainTypeFollow
     *
     * @return $this
     */
    public function setRefDomainTypeFollow($refDomainTypeFollow)
    {
        $this->container['refDomainTypeFollow'] = $refDomainTypeFollow;

        return $this;
    }

    /**
     * Gets refDomainTypeHomepageLink
     *
     * @return string
     */
    public function getRefDomainTypeHomepageLink()
    {
        return $this->container['refDomainTypeHomepageLink'];
    }

    /**
     * Sets refDomainTypeHomepageLink
     *
     * @param string $refDomainTypeHomepageLink refDomainTypeHomepageLink
     *
     * @return $this
     */
    public function setRefDomainTypeHomepageLink($refDomainTypeHomepageLink)
    {
        $this->container['refDomainTypeHomepageLink'] = $refDomainTypeHomepageLink;

        return $this;
    }

    /**
     * Gets refDomainTypeDirect
     *
     * @return string
     */
    public function getRefDomainTypeDirect()
    {
        return $this->container['refDomainTypeDirect'];
    }

    /**
     * Sets refDomainTypeDirect
     *
     * @param string $refDomainTypeDirect refDomainTypeDirect
     *
     * @return $this
     */
    public function setRefDomainTypeDirect($refDomainTypeDirect)
    {
        $this->container['refDomainTypeDirect'] = $refDomainTypeDirect;

        return $this;
    }

    /**
     * Gets refDomainTypeProtocolHTTPS
     *
     * @return string
     */
    public function getRefDomainTypeProtocolHTTPS()
    {
        return $this->container['refDomainTypeProtocolHTTPS'];
    }

    /**
     * Sets refDomainTypeProtocolHTTPS
     *
     * @param string $refDomainTypeProtocolHTTPS refDomainTypeProtocolHTTPS
     *
     * @return $this
     */
    public function setRefDomainTypeProtocolHTTPS($refDomainTypeProtocolHTTPS)
    {
        $this->container['refDomainTypeProtocolHTTPS'] = $refDomainTypeProtocolHTTPS;

        return $this;
    }

    /**
     * Gets canonicalURL
     *
     * @return string
     */
    public function getCanonicalURL()
    {
        return $this->container['canonicalURL'];
    }

    /**
     * Sets canonicalURL
     *
     * @param string $canonicalURL canonicalURL
     *
     * @return $this
     */
    public function setCanonicalURL($canonicalURL)
    {
        $this->container['canonicalURL'] = $canonicalURL;

        return $this;
    }

    /**
     * Gets citationFlow
     *
     * @return string
     */
    public function getCitationFlow()
    {
        return $this->container['citationFlow'];
    }

    /**
     * Sets citationFlow
     *
     * @param string $citationFlow citationFlow
     *
     * @return $this
     */
    public function setCitationFlow($citationFlow)
    {
        $this->container['citationFlow'] = $citationFlow;

        return $this;
    }

    /**
     * Gets trustFlow
     *
     * @return string
     */
    public function getTrustFlow()
    {
        return $this->container['trustFlow'];
    }

    /**
     * Sets trustFlow
     *
     * @param string $trustFlow trustFlow
     *
     * @return $this
     */
    public function setTrustFlow($trustFlow)
    {
        $this->container['trustFlow'] = $trustFlow;

        return $this;
    }

    /**
     * Gets trustMetric
     *
     * @return string
     */
    public function getTrustMetric()
    {
        return $this->container['trustMetric'];
    }

    /**
     * Sets trustMetric
     *
     * @param string $trustMetric trustMetric
     *
     * @return $this
     */
    public function setTrustMetric($trustMetric)
    {
        $this->container['trustMetric'] = $trustMetric;

        return $this;
    }

    /**
     * Gets topicalTrustFlowTopic0
     *
     * @return string
     */
    public function getTopicalTrustFlowTopic0()
    {
        return $this->container['topicalTrustFlowTopic0'];
    }

    /**
     * Sets topicalTrustFlowTopic0
     *
     * @param string $topicalTrustFlowTopic0 topicalTrustFlowTopic0
     *
     * @return $this
     */
    public function setTopicalTrustFlowTopic0($topicalTrustFlowTopic0)
    {
        $this->container['topicalTrustFlowTopic0'] = $topicalTrustFlowTopic0;

        return $this;
    }

    /**
     * Gets topicalTrustFlowValue0
     *
     * @return string
     */
    public function getTopicalTrustFlowValue0()
    {
        return $this->container['topicalTrustFlowValue0'];
    }

    /**
     * Sets topicalTrustFlowValue0
     *
     * @param string $topicalTrustFlowValue0 topicalTrustFlowValue0
     *
     * @return $this
     */
    public function setTopicalTrustFlowValue0($topicalTrustFlowValue0)
    {
        $this->container['topicalTrustFlowValue0'] = $topicalTrustFlowValue0;

        return $this;
    }

    /**
     * Gets topicalTrustFlowTopic1
     *
     * @return string
     */
    public function getTopicalTrustFlowTopic1()
    {
        return $this->container['topicalTrustFlowTopic1'];
    }

    /**
     * Sets topicalTrustFlowTopic1
     *
     * @param string $topicalTrustFlowTopic1 topicalTrustFlowTopic1
     *
     * @return $this
     */
    public function setTopicalTrustFlowTopic1($topicalTrustFlowTopic1)
    {
        $this->container['topicalTrustFlowTopic1'] = $topicalTrustFlowTopic1;

        return $this;
    }

    /**
     * Gets topicalTrustFlowValue1
     *
     * @return string
     */
    public function getTopicalTrustFlowValue1()
    {
        return $this->container['topicalTrustFlowValue1'];
    }

    /**
     * Sets topicalTrustFlowValue1
     *
     * @param string $topicalTrustFlowValue1 topicalTrustFlowValue1
     *
     * @return $this
     */
    public function setTopicalTrustFlowValue1($topicalTrustFlowValue1)
    {
        $this->container['topicalTrustFlowValue1'] = $topicalTrustFlowValue1;

        return $this;
    }

    /**
     * Gets topicalTrustFlowTopic2
     *
     * @return string
     */
    public function getTopicalTrustFlowTopic2()
    {
        return $this->container['topicalTrustFlowTopic2'];
    }

    /**
     * Sets topicalTrustFlowTopic2
     *
     * @param string $topicalTrustFlowTopic2 topicalTrustFlowTopic2
     *
     * @return $this
     */
    public function setTopicalTrustFlowTopic2($topicalTrustFlowTopic2)
    {
        $this->container['topicalTrustFlowTopic2'] = $topicalTrustFlowTopic2;

        return $this;
    }

    /**
     * Gets topicalTrustFlowValue2
     *
     * @return string
     */
    public function getTopicalTrustFlowValue2()
    {
        return $this->container['topicalTrustFlowValue2'];
    }

    /**
     * Sets topicalTrustFlowValue2
     *
     * @param string $topicalTrustFlowValue2 topicalTrustFlowValue2
     *
     * @return $this
     */
    public function setTopicalTrustFlowValue2($topicalTrustFlowValue2)
    {
        $this->container['topicalTrustFlowValue2'] = $topicalTrustFlowValue2;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
    
    /**
     * @param boolean $removeEmptyValues [remove all empty values if true]
     * @param array $retrieveKeys [list of keys to get back in any case]
     * 
     * Examples:
     * toArray() => returns only non empty values
     * toArray(true) => returns all values
     */
    public function toArray($retrieveAllValues = false){
        $container = $this->container;
        foreach ($container as $key => &$value) {
            if (
                $retrieveAllValues === false && 
                empty($value) === true && 
                $value !== false && 
                $value !== ''
            ) {
                unset($container[$key]);
                continue;
            }
            
            if (gettype($value) === "object") {
                if(method_exists($value, 'toArray')) {
                    $value = $value->toArray($retrieveAllValues);
                }else{
                    if(get_class($value) === "DateTime"){
                        $value = $value->format("Y-m-d\TH:i:s");
                    }else{
                        $value = (array) $value;
                    }
                }
            }
            if (is_array($value)) {
                foreach ($value as &$v) {
                    if (gettype($v) === "object") {
                        $v = $v->toArray($retrieveAllValues);
                    }
                }
            }
        };
        return $container;
    }
}


